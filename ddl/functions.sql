CREATE OR REPLACE FUNCTION array_to_hstore(ANYARRAY)
RETURNS HSTORE AS $$
SELECT HSTORE( (SELECT ARRAY_AGG( generate_series ) FROM GENERATE_SERIES( 1, CARDINALITY( $1 ) ) )::TEXT[], $1::TEXT[] );
$$ LANGUAGE SQL IMMUTABLE;

CREATE OR REPLACE FUNCTION alternate_allele_frequency( TINYINT[] )
RETURNS FLOAT AS $$
SELECT COALESCE( SUM(unnest.x)/(2*COUNT(unnest.x))::FLOAT, 0 ) FROM UNNEST( $1 ) as unnest(x);
$$ LANGUAGE SQL IMMUTABLE;

CREATE OR REPLACE FUNCTION count_to_alleles( TINYINT, VARCHAR, VARCHAR )
RETURNS TEXT AS $$
SELECT CASE $1 WHEN 0 THEN $2 || ' ' || $2 WHEN 1 THEN $2 || ' ' || $3 WHEN 2 THEN $3 || ' ' || $3 END;
$$ LANGUAGE SQL IMMUTABLE;

CREATE OR REPLACE FUNCTION counts_to_alleles( TINYINT[], VARCHAR, VARCHAR )
RETURNS TEXT[] AS $$
SELECT ARRAY_AGG( count_to_alleles( unnest.x, $2, $3 ) ) FROM UNNEST( $1 ) AS unnest(x);
$$ LANGUAGE SQL IMMUTABLE;
